# Replace C-b with C-s for the prefix key
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

set-option -g history-limit 5000

# Easy reloading of the tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Seamless aviation using vim-tmux-navigator (github christoomey/vim-tmux-navigator)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

# Use 256 color mode, useful for Vim colorshemes
# set-option -g default-terminal "screen-256color"
# set-option -g default-terminal "xterm-256color"
# set -ga terminal-overrides ",xterm-256color*:Tc"
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Use emacs / readline key-bindings in the tmux command prompt
set-option -g status-keys "emacs"

# Allow the session name in status left to display up to 50 characters
set-option -g status-left-length 50

# More useful status-right with battery percentage and nicely formated datetime
#set -g status-right "#(battery-status)  #(date '+%a, %b %d - %I:%M') "
# Setting status bar as shown in arco linux 
set-option -g status-interval 1
set-option -g status-style bg=#333333
set-option -g status-left-style default
set-option -g status-left "#[fg=green,dim][#S]#[fg=blue]â€¢"
set-option -g status-right-style default
set-option -g status-right-length 90
set-option -g status-right "#[fg=green,dim]#(battery-status) "
set-option -ag status-right "#[fg=yellow,bg=default]#(tmux-mem-cpu-load) "
set-option -ag status-right " #[fg=white,bg=default]%H:%M #[fg=blue]%d/%b (W%V) "
set-option -g window-status-format "#I:#W"
set-option -g window-status-current-format "[#I:#W]#{?window_zoomed_flag,#[fg=green]*Z,}"
# set-window-option -g window-status-style fg=colour244
# set-window-option -g window-status-style bg=default
# set-window-option -g window-status-current-style fg=colour166
# set-window-option -g window-status-current-style bg=default
# set -g detach-on-destroy off  # don't exit from tmux when closing a session

# More intuitive pane splitting key-bindings, open all in current path
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key '\' split-window -h  -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Easy resizing of panes with fine and coarse adjustment
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
# bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Number windows starting at 1, renumber as windows are added / removed
set-option -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d
# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection clipboard"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection clipboard"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | xclip -selection clipboard'
bind C-y run 'tmux save-buffer - | xclip -selection clipboard'
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Default to incremental search in copy-mode
bind-key  -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key  -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""
bind-key / copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""

# Sample quick-pane configurations
# bind-key h split-window -h "htop"

bind C-j choose-tree
# Fuzzy matching session navigation via fzf utility
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf | xargs tmux switch-client -t"
bind C-s split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# "break session" and "kill session" without exiting tmux
# bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key -r C-k run-shell 'tmux kill-session'

bind -r D neww -c "#{pane_current_path}" "vim +VimwikiIndex"

# forget the find window.  That is for chumps
# bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-smug"
bind-key -r e run-shell "tmux neww ~/.local/bin/tmux-smug -q"

bind-key -r b run-shell "tmux-start-on-window filebrowser lf"

bind-key -r i run-shell "tmux neww tmux-cht.sh"
# bind-key -r Q run-shell "~/.local/bin/tmux-sessionizer ~/projects/work/addvolt-api/"
# bind-key -r W run-shell "~/.local/bin/tmux-sessionizer ~/projects/work/addvolt-backoffice/"
bind-key -r Q run-shell "~/.local/bin/tmux-smug ~/.config/smug/addvolt-api-smug.yml"
bind-key -r W run-shell "~/.local/bin/tmux-smug ~/.config/smug/addvolt-backoffice-smug.yml"
# bind-key -r R run-shell "~/.local/bin/tmux-sessionizer ~/work/milo"

# Suggested by nvim :checkhealth
set-option -sg escape-time 10

## New experiments
# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 10

# tile all windows
unbind =
bind = select-layout tiled

# enable mouse support for switching panes/windows
setw -g mouse on
set-option -g focus-events on
set-option -g set-titles on

# automatically renumber tmux windows
set -g renumber-windows on

set -g set-clipboard on
# set the default title format
set-option -g set-titles-string "#T - #W"

# Move window on the list
bind-key -r M-Left swap-window -t -1\; select-window -t -1
bind-key -r M-Right swap-window -t +1\; select-window -t +1
bind-key c command-prompt -p "window name:" -I "tmux" "new-window; rename-window '%%'"
bind-key C-r command-prompt -p "window name:" -I "tmux" "rename-window '%%'"
bind-key w choose-tree -Zs
# bind-key C-w choose-tree #-Zw
# bind-key C-w run -C 'display-menu -T "[ #[fg=red]Select a session#[default] ]" #{S:#S "" "switch-client -t #S" }'
bind-key C-f choose-tree #-Zw
bind-key l last-window
bind-key z resize-pane -Z
